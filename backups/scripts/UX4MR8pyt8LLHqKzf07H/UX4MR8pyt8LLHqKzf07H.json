{"code":{"value":"\n// GET NEAREST GRID\n\nlet grid = nearest(\"grid\",target.position);\nif(!grid) {\n    console.warn(\"Unable to find a grid to place tog on.\");\n    return;\n}\n\n// GET GRID POSITION\n\nlet gridPosition = grid.gridPosition(target.position);\ntarget.position = gridPosition;\n\n// HIDE PROXY (BUT DON'T PERSIST, SO USE MESH isVisible)\n\ntarget.mesh.visibility = 0;\n\n// GET PORTRAIT TEXTURE\n\nlet portraitTexture = texture(target.state.portrait);\n\n// GET BASE TEXTURE\n\nlet baseTexture = texture(\"https://firebasestorage.googleapis.com/v0/b/theodon-tog.appspot.com/o/textures%2Ftexture-seamless-wood-3.jpg?alt=media&token=2d39b3dc-ab53-4123-95fa-23bb88239211\");\nlet brassTexture = texture(\"https://firebasestorage.googleapis.com/v0/b/theodon-tog.appspot.com/o/textures%2Fbrass.jpg?alt=media&token=77dadda2-25a6-43d8-ae69-270748e051f8\");\n\n// CREATE BASE\n\nlet size = grid.gridSize;\nlet halfSize = Math.floor(size/2);\n\nlet baseHeight = 4;\nlet visibility = 1;\nlet baseWidth = Math.floor(halfSize * 0.8);\nlet shape = [new BABYLON.Vector3(0,0,0), new BABYLON.Vector3(baseWidth,0,0),new BABYLON.Vector3(baseWidth-2,baseHeight-1,0),new BABYLON.Vector3(0,baseHeight,0)];\nlet base = BABYLON.MeshBuilder.CreateLathe(\"base \", {shape: shape, tessellation: 6});\nbase.parent = target.mesh;\n\nif(target.state.hidden) {\n\tif(user.role == \"GM\" || targer.owner == user._id) {\n\t\tvisibility = 0.4;\n\t} else {\n\t\tbase.setEnabled(false);\n\t}\n}\nbase.visibility = visibility;\nbase.material = new BABYLON.StandardMaterial(\"base material\");\nbase.material.diffuseTexture = baseTexture;\nbase.material.specularColor = new BABYLON.Color3(0.2,0.2,0.2);\n\n// WIDTH AND HEIGHT\n\nlet width = portraitTexture._texture.baseWidth;\nlet height = portraitTexture._texture.baseHeight;\n\nlet scale = (size * 0.75) / width;\nlet scaledWidth = Math.floor(width * scale);\nlet scaledHeight = Math.floor(height * scale);\n\n// CREATE POST\n\nlet postHeight = scaledHeight + baseHeight * 2; // BASE HEIGHT IS ALSO GAP\nlet post = BABYLON.MeshBuilder.CreateCylinder(\"portrait post\", {height:postHeight,diameter: 1, tessellation: 12});\npost.visibility = visibility;\npost.material = base.material;\npost.parent = base;\npost.position.y = Math.floor(postHeight/2) + baseHeight;\n\n// CREATE PLAQUE BOARD\n\nvar board = BABYLON.MeshBuilder.CreateBox(\"plaque board\", {height: scaledHeight, width: scaledWidth, depth:1.5});\nboard.visibility = visibility;\nboard.material = base.material;\nboard.parent = base;\nboard.position.y = post.position.y + Math.floor(baseHeight/2);\n\n// CREATE PORTRAIT DECALS\n\nvar portrait = BABYLON.MeshBuilder.CreateBox(\"portrait 1\", {height: scaledHeight, width: scaledWidth, depth:0.1});\nportrait.visibility = visibility;\nportrait.material = new BABYLON.StandardMaterial(\"base material\");\nportrait.material.alpha = visibility;\nportrait.material.diffuseTexture = portraitTexture;\nportrait.material.diffuseTexture.hasAlpha = true;\nportrait.parent = base;\nportrait.position.y = post.position.y + Math.floor(baseHeight/2);\nportrait.position.z = -0.8;\n\nvar portrait2 = BABYLON.MeshBuilder.CreateBox(\"portrait 2\", {height: scaledHeight, width: scaledWidth, depth:0.1});\nportrait2.visibility = visibility;\nportrait2.material = portrait.material;\nportrait2.parent = base;\nportrait2.position.y = post.position.y + Math.floor(baseHeight/2);\nportrait2.position.z = 0.8;\nportrait2.rotation.y = Math.PI;\n\n// CREATE FACING MARKER\n\nvar facing = BABYLON.MeshBuilder.CreateCylinder(\"facing\", {height: baseWidth-4, diameter: 4,diameterBottom:0.1,tessellation:12});\nfacing.visibility = visibility;\nfacing.parent = base;\nfacing.position.y = baseHeight;\nfacing.position.z = -(baseWidth/2)+2;\nfacing.rotation.x = Math.PI/2;\nfacing.material = new BABYLON.StandardMaterial(\"facing material\");\nfacing.material.diffuseTexture = brassTexture;\nfacing.material.specularColor = new BABYLON.Color3(0.8,0.8,0.8);\n\n// WIRE CLICK\n\ntarget.on(\"pick\",\"Togs/Pick\");\n","type":"string"},"path":{"value":"Togs/Build Tog","type":"string"},"wid":{"value":"rTVGoduy0VwBRjV0segL","type":"string"},"name":{"value":"Build Tog","type":"string"}}